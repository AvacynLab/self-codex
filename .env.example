# Exemple de configuration pour mcp-self-fork-orchestrator.
# Renseignez les variables nécessaires puis chargez-les via `source .env.example`
# avant de lancer `npm run start:http`, les scripts de validation ou les tests.
#
# Pour vérifier que le fichier reste synchronisé avec le code, exécutez :
#   node scripts/validation/check-env-example.mjs

# ────────────────────────────────────────────────
# Bootstrap & transport HTTP
# ────────────────────────────────────────────────
# Laisser `0` pour démarrer uniquement en STDIO. Passer à `1` active le serveur HTTP
# via `scripts/setup-agent-env.sh`.
START_HTTP=0

# Adresse/port exposés par le transport HTTP.
MCP_HTTP_HOST=0.0.0.0
MCP_HTTP_PORT=4000
# Point de montage du serveur JSON-RPC.
MCP_HTTP_PATH=/mcp
# Mettre `yes` pour que les enfants utilisent le pont HTTP stateless.
MCP_HTTP_STATELESS=no

# Jeton HTTP requis pour les endpoints protégés (/readyz, /metrics, JSON-RPC).
# Exemple : `tok_dev_d2f8b0e4d4ce4ffb8a3a0dd10f4a1c1d`
MCP_HTTP_TOKEN=change-me
# En développement uniquement : passer à `1` pour autoriser l'absence de jeton HTTP.
# Toujours conserver `0` (défaut) en production.
MCP_HTTP_ALLOW_NOAUTH=0

# Limiteur de débit HTTP (burst/token bucket). Laisser à `0` pour désactiver.
MCP_HTTP_RATE_LIMIT_DISABLE=0
MCP_HTTP_RATE_LIMIT_RPS=10
MCP_HTTP_RATE_LIMIT_BURST=20

# Limiteur dédié aux façades `search.*` (laisser vide pour les valeurs par défaut).
MCP_HTTP_SEARCH_RATE_LIMIT_DISABLE=0
MCP_HTTP_SEARCH_RATE_LIMIT_RPS=2
MCP_HTTP_SEARCH_RATE_LIMIT_BURST=4

# ────────────────────────────────────────────────
# Répertoires & artefacts persistés
# ────────────────────────────────────────────────
# Racines des journaux, snapshots et validations.
MCP_RUNS_ROOT=validation_run
# Dossier parent des espaces de travail enfants.
MCP_CHILDREN_ROOT=children
# Répertoire IPC pour le bridge FS (par défaut : `~/.codex/ipc`).
MCP_FS_IPC_DIR=
# Limite maximale des artefacts (octets) générés par les outils.
MCP_MAX_ARTIFACT_BYTES=8388608

# ────────────────────────────────────────────────
# SSE & budgets HTTP streamables
# ────────────────────────────────────────────────
# Taille maximale d'un chunk SSE individuel (octets).
MCP_SSE_MAX_CHUNK_BYTES=32768
# Seuil de tampon SSE avant backpressure ou drop (octets).
MCP_SSE_MAX_BUFFER=1048576
MCP_SSE_EMIT_TIMEOUT_MS=5000
# Intervalle des heartbeats SSE (ms). Laisser vide pour utiliser le clamp dynamique (≥ 1000ms, défaut 15000ms).
MCP_SSE_KEEPALIVE_MS=

# ────────────────────────────────────────────────
# Graphes & worker pool
# ────────────────────────────────────────────────
# Nombre de workers dédiés aux diffs/validations (0 = désactivé).
MCP_GRAPH_WORKERS=0
# Taille de diff (en fichiers) au-delà de laquelle le pool worker est activé.
MCP_GRAPH_POOL_THRESHOLD=6
# Timeout (ms) appliqué aux workers distants. Laisser vide pour le défaut dynamique.
MCP_GRAPH_WORKER_TIMEOUT_MS=
# Forçage de la cadence de snapshots (commits / intervalle).
MCP_GRAPH_SNAPSHOT_EVERY_COMMITS=10
MCP_GRAPH_SNAPSHOT_INTERVAL_MS=300000
# Capacité maximale du vecteur mémoire persistant.
MCP_MEMORY_VECTOR_MAX_DOCS=1024
# Backend RAG utilisé (`local`, `qdrant`, `weaviate`, ...).
MEM_BACKEND=local
# URL du backend mémoire (laisser vide pour le mode local en mémoire/disque).
MEM_URL=
# Fournisseur d'embeddings documenté pour les journaux et diagnostics.
EMBED_PROVIDER=openai
# Taille par défaut du top-k pour le retriever hybride.
RETRIEVER_K=5
# Poids lexical appliqué lorsque BM25 est activé (`0` = désactivé).
HYBRID_BM25=0

# ────────────────────────────────────────────────
# Outils & budgets
# ────────────────────────────────────────────────
# Ensemble fonctionnel chargé au démarrage.
MCP_TOOLS_MODE=basic
# Pack d'outils additionnels recommandé.
MCP_TOOL_PACK=basic
# Nombre maximal de candidats exposés par le router contextuel.
TOOLROUTER_TOPK=5
# Durée de rétention (ms) des réponses idempotentes.
IDEMPOTENCY_TTL_MS=300000
# Timeout par défaut (ms) appliqué aux appels JSON-RPC.
MCP_RPC_DEFAULT_TIMEOUT_MS=
# Overrides optionnels par outil (préfixe obligatoire).
# Exemple : MCP_TOOLS_BUDGET_PLAN_COMPILE_EXECUTE_TIME_MS=240000
#           MCP_TOOLS_BUDGET_CHILD_ORCHESTRATE_TOOL_CALLS=5

# ────────────────────────────────────────────────
# Observabilité & traçage
# ────────────────────────────────────────────────
OTEL_EXPORTER_OTLP_ENDPOINT=
OTEL_EXPORTER_OTLP_HEADERS=

# ────────────────────────────────────────────────
# Journalisation & rotation
# ────────────────────────────────────────────────
# Activer la rédaction automatique (`true`/`false`).
MCP_LOG_REDACT=true
# Fichier de log structuré (laisser vide pour stdout).
MCP_LOG_FILE=validation_run/logs/self-codex.log
# Taille maximale d'un fichier de log (supporte suffixes k/m/g).
MCP_LOG_ROTATE_SIZE=10MB
# Nombre de fichiers de rotation conservés.
MCP_LOG_ROTATE_KEEP=5

# ────────────────────────────────────────────────
# ThoughtGraph & raisonnement multi-voies
# ────────────────────────────────────────────────
# Nombre maximal de branches actives conservées par le scheduler.
THOUGHTGRAPH_MAX_BRANCHES=6
# Profondeur maximale des expansions simultanées.
THOUGHTGRAPH_MAX_DEPTH=4

# ────────────────────────────────────────────────
# Lessons institutionnelles
# ────────────────────────────────────────────────
# Nombre maximal de leçons injectées dans un prompt.
LESSONS_MAX=3

# ────────────────────────────────────────────────
# Qualité & réflexion
# ────────────────────────────────────────────────
# `on`/`off` (true/false/yes/no). Les valeurs invalides reviennent au défaut.
MCP_ENABLE_REFLECTION=on
MCP_QUALITY_GATE=on
# Seuil de réussite du quality gate (0-100).
MCP_QUALITY_THRESHOLD=70

# ────────────────────────────────────────────────
# Enfants MCP (spawn)
# ────────────────────────────────────────────────
# Commande de base utilisée pour lancer un enfant (défaut : node courant).
MCP_CHILD_COMMAND=
# Tableau JSON des arguments supplémentaires (ex: `["--loader","ts-node/esm"]`).
MCP_CHILD_ARGS=
# Profil sandbox par défaut (`strict`, `standard`, `permissive`).
MCP_CHILD_SANDBOX_PROFILE=standard
# Liste (séparée par virgules) des variables à propager automatiquement.
MCP_CHILD_ENV_ALLOW=
# Délais (ms) pour l'initialisation et l'arrêt des enfants. Laisser vide pour le défaut historique (2s) ;
# mettre `0` sur SPAWN/FORCE pour désactiver la garde côté orchestrateur.
MCP_CHILD_SPAWN_TIMEOUT_MS=
MCP_CHILD_READY_TIMEOUT_MS=2000
MCP_CHILD_SHUTDOWN_GRACE_MS=2000
MCP_CHILD_SHUTDOWN_FORCE_MS=

# ────────────────────────────────────────────────
# Budgets requêtes entrantes
# ────────────────────────────────────────────────
# Limites globales (ms / tokens / appels / octets). Laisser vide pour aucun plafond.
MCP_REQUEST_BUDGET_TIME_MS=
MCP_REQUEST_BUDGET_TOKENS=
MCP_REQUEST_BUDGET_TOOL_CALLS=
MCP_REQUEST_BUDGET_BYTES_IN=
MCP_REQUEST_BUDGET_BYTES_OUT=

# ────────────────────────────────────────────────
# Moteur de recherche (SearxNG + unstructured)
# ────────────────────────────────────────────────
# URL de base de l’instance SearxNG auto-hébergée.
SEARCH_SEARX_BASE_URL=http://searxng:8080
# Point d’entrée de l’API JSON (défaut `/search`).
SEARCH_SEARX_API_PATH=/search
# Timeout appliqué aux requêtes SearxNG (en millisecondes).
SEARCH_SEARX_TIMEOUT_MS=15000
# Jeton Bearer optionnel pour les instances Searx protégées.
SEARCH_SEARX_AUTH_TOKEN=
# Nombre de tentatives additionnelles après l'essai initial.
SEARCH_SEARX_MAX_RETRIES=2
# Liste CSV d’engines activés pour les requêtes.
SEARCH_SEARX_ENGINES=duckduckgo,wikipedia,arxiv,github,qwant
# Liste CSV de catégories Searx à cibler.
SEARCH_SEARX_CATEGORIES=general,news,images,files
# URL du service `unstructured.io` auto-hébergé.
UNSTRUCTURED_BASE_URL=http://unstructured:8000
# Timeout HTTP pour l’extraction structurée (ms).
UNSTRUCTURED_TIMEOUT_MS=30000
# Stratégie d’extraction utilisée par `unstructured`.
UNSTRUCTURED_STRATEGY=hi_res
# Jeton API optionnel transmis dans l'en-tête `Authorization`.
UNSTRUCTURED_API_KEY=
# Timeout lors du téléchargement des contenus distants (ms).
SEARCH_FETCH_TIMEOUT_MS=20000
# Taille maximale de contenu téléchargé (octets).
SEARCH_FETCH_MAX_BYTES=15000000
# User-Agent explicite envoyé lors du fetch.
SEARCH_FETCH_UA=CodexSearchBot/1.0
# Contrôle du respect des robots.txt (true/false/yes/no).
SEARCH_FETCH_RESPECT_ROBOTS=false
# Nombre maximal de téléchargements parallèles.
SEARCH_FETCH_PARALLEL=4
# Délai minimal entre deux requêtes vers le même domaine (ms).
SEARCH_FETCH_DOMAIN_DELAY_MS=0
# Active le cache de contenu (true/false/yes/no).
SEARCH_FETCH_CACHE_ENABLED=false
# TTL par défaut du cache (ms).
SEARCH_FETCH_CACHE_TTL_MS=600000
# Nombre maximum d’entrées par domaine.
SEARCH_FETCH_CACHE_MAX_ENTRIES=16
# Durée du backoff après erreurs 4xx (ms).
SEARCH_FETCH_CACHE_CLIENT_ERROR_MS=300000
# Durée du backoff après erreurs 5xx (ms).
SEARCH_FETCH_CACHE_SERVER_ERROR_MS=60000
# Overrides TTL par domaine (format: domaine=ttl,...).
SEARCH_FETCH_CACHE_DOMAIN_TTLS=
# Contrôle l’injection automatique dans le graphe de connaissances.
SEARCH_INJECT_GRAPH=true
# Contrôle l’injection automatique dans le vector store.
SEARCH_INJECT_VECTOR=true
# Parallélisme appliqué à l’extraction structurée.
SEARCH_EXTRACT_PARALLEL=2
