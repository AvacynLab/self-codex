# Exemple de configuration pour mcp-self-fork-orchestrator.
# Renseignez les variables nécessaires puis chargez-les via `source .env.example`
# avant de lancer `npm run start:http`, les scripts de validation ou les tests.
#
# Pour vérifier que le fichier reste synchronisé avec le code, exécutez :
#   node scripts/validation/check-env-example.mjs

# ────────────────────────────────────────────────
# Bootstrap & transport HTTP
# ────────────────────────────────────────────────
# Laisser `0` pour démarrer uniquement en STDIO. Passer à `1` active le serveur HTTP
# via `scripts/setup-agent-env.sh`.
START_HTTP=0

# Adresse/port exposés par le transport HTTP.
MCP_HTTP_HOST=0.0.0.0
MCP_HTTP_PORT=4000
# Point de montage du serveur JSON-RPC.
MCP_HTTP_PATH=/mcp
# Mettre `yes` pour que les enfants utilisent le pont HTTP stateless.
MCP_HTTP_STATELESS=no

# Jeton HTTP requis pour les endpoints protégés (/readyz, /metrics, JSON-RPC).
# Exemple : `tok_dev_d2f8b0e4d4ce4ffb8a3a0dd10f4a1c1d`
MCP_HTTP_TOKEN=remplacez-moi

# Limiteur de débit HTTP (burst/token bucket). Laisser à `0` pour désactiver.
MCP_HTTP_RATE_LIMIT_DISABLE=0
MCP_HTTP_RATE_LIMIT_RPS=10
MCP_HTTP_RATE_LIMIT_BURST=20

# ────────────────────────────────────────────────
# Répertoires & artefacts persistés
# ────────────────────────────────────────────────
# Racines des journaux, snapshots et validations.
MCP_RUNS_ROOT=runs
# Dossier parent des espaces de travail enfants.
MCP_CHILDREN_ROOT=children
# Répertoire IPC pour le bridge FS (par défaut : `~/.codex/ipc`).
MCP_FS_IPC_DIR=
# Limite maximale des artefacts (octets) générés par les outils.
MCP_MAX_ARTIFACT_BYTES=8388608

# ────────────────────────────────────────────────
# SSE & budgets HTTP streamables
# ────────────────────────────────────────────────
MCP_SSE_MAX_CHUNK_BYTES=32768
MCP_SSE_MAX_BUFFER=1048576
MCP_SSE_EMIT_TIMEOUT_MS=5000

# ────────────────────────────────────────────────
# Graphes & worker pool
# ────────────────────────────────────────────────
# Nombre de workers dédiés aux diffs/validations (0 = désactivé).
MCP_GRAPH_WORKERS=0
# Taille de diff (en fichiers) au-delà de laquelle le pool worker est activé.
MCP_GRAPH_POOL_THRESHOLD=6
# Timeout (ms) appliqué aux workers distants. Laisser vide pour le défaut dynamique.
MCP_GRAPH_WORKER_TIMEOUT_MS=
# Forçage de la cadence de snapshots (commits / intervalle).
MCP_GRAPH_SNAPSHOT_EVERY_COMMITS=10
MCP_GRAPH_SNAPSHOT_INTERVAL_MS=300000
# Capacité maximale du vecteur mémoire persistant.
MCP_MEMORY_VECTOR_MAX_DOCS=1024

# ────────────────────────────────────────────────
# Outils & budgets
# ────────────────────────────────────────────────
# Ensemble fonctionnel chargé au démarrage.
MCP_TOOLS_MODE=basic
# Pack d'outils additionnels recommandé.
MCP_TOOL_PACK=basic
# Durée de rétention (ms) des réponses idempotentes.
IDEMPOTENCY_TTL_MS=600000
# Timeout par défaut (ms) appliqué aux appels JSON-RPC.
MCP_RPC_DEFAULT_TIMEOUT_MS=
# Overrides optionnels par outil (préfixe obligatoire).
# Exemple : MCP_TOOLS_BUDGET_PLAN_COMPILE_EXECUTE_TIME_MS=240000
#           MCP_TOOLS_BUDGET_CHILD_ORCHESTRATE_TOOL_CALLS=5

# ────────────────────────────────────────────────
# Observabilité & traçage
# ────────────────────────────────────────────────
OTEL_EXPORTER_OTLP_ENDPOINT=
OTEL_EXPORTER_OTLP_HEADERS=

# ────────────────────────────────────────────────
# Journalisation & rotation
# ────────────────────────────────────────────────
# Activer la redaction automatique (`on`/`off`).
MCP_LOG_REDACT=on
# Fichier de log structuré (laisser vide pour stdout).
MCP_LOG_FILE=logs/orchestrator.log
# Taille maximale d'un fichier de log (octets).
MCP_LOG_ROTATE_SIZE=10485760
# Nombre de fichiers de rotation conservés.
MCP_LOG_ROTATE_KEEP=5

# ────────────────────────────────────────────────
# Qualité & réflexion
# ────────────────────────────────────────────────
# `on`/`off` (true/false/yes/no). Les valeurs invalides reviennent au défaut.
MCP_ENABLE_REFLECTION=on
MCP_QUALITY_GATE=on
# Seuil de réussite du quality gate (0-100).
MCP_QUALITY_THRESHOLD=70

# ────────────────────────────────────────────────
# Enfants MCP (spawn)
# ────────────────────────────────────────────────
# Commande de base utilisée pour lancer un enfant (défaut : node courant).
MCP_CHILD_COMMAND=
# Tableau JSON des arguments supplémentaires (ex: `["--loader","ts-node/esm"]`).
MCP_CHILD_ARGS=
# Profil sandbox par défaut (`strict`, `standard`, `permissive`).
MCP_CHILD_SANDBOX_PROFILE=standard
# Liste (séparée par virgules) des variables à propager automatiquement.
MCP_CHILD_ENV_ALLOW=

# ────────────────────────────────────────────────
# Budgets requêtes entrantes
# ────────────────────────────────────────────────
# Limites globales (ms / tokens / appels / octets). Laisser vide pour aucun plafond.
MCP_REQUEST_BUDGET_TIME_MS=
MCP_REQUEST_BUDGET_TOKENS=
MCP_REQUEST_BUDGET_TOOL_CALLS=
MCP_REQUEST_BUDGET_BYTES_IN=
MCP_REQUEST_BUDGET_BYTES_OUT=
