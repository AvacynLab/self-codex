name: CI

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  # Fails fast on hygiene regressions before triggering the heavier build pipeline.
  hygiene:
    name: Hygiene gate
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Run hygiene sweep
        run: npm run lint:hygiene

      - name: Ensure double assertion motifs are absent
        run: |
          if rg --no-messages --quiet -e "\\bas\\s+unknown\\s+as\\b" src; then
            echo "Double assertion pattern detected in TypeScript sources." >&2
            exit 1
          fi

      - name: Ensure TODO/FIXME markers stay outside source code
        run: |
          if rg --no-messages --glob '!**/__tests__/**' --quiet -e "\\b(?:TODO|FIXME)\\b" src; then
            echo "TODO/FIXME marker detected outside sanctioned fixtures." >&2
            exit 1
          fi

  build-typecheck-test:
    name: Build, typecheck and test
    needs: hygiene
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Build application bundles
        run: npm run build

      - name: Type-check sources and tests
        run: npm run typecheck

      - name: Run lint suite
        run: npm run lint

      - name: Run full test pipeline (TAP)
        run: |
          set -euo pipefail
          mkdir -p artifacts
          # Capture the full test transcript for debugging while preserving the TAP stream.
          npm run test 2>&1 | tee /tmp/self-codex.test.log | tee artifacts/tap.txt

      - name: Upload TAP report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: tap-report
          path: artifacts/tap.txt
          if-no-files-found: warn

      - name: Upload unit test log
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: self-codex.test.log
          path: /tmp/self-codex.test.log
          if-no-files-found: warn

  # Validates the dockerised search stack (SearxNG + unstructured) so regressions
  # are caught even when local environments lack Docker.
  search-e2e:
    name: Search stack end-to-end
    needs: build-typecheck-test
    runs-on: ubuntu-latest
    timeout-minutes: 90
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Verify Docker availability
        run: docker compose version

      - name: Run search end-to-end suite
        env:
          SEARCH_STACK_REUSE: "hold"
        run: npm run test:e2e:search

      - name: Run search smoke validation
        env:
          SEARCH_STACK_REUSE: "external"
        run: npm run smoke:search

      - name: Collect compose logs on failure
        if: failure()
        run: |
          docker compose -f docker/docker-compose.search.yml logs || true

      - name: Tear down search stack
        if: always()
        run: docker compose -f docker/docker-compose.search.yml down -v
