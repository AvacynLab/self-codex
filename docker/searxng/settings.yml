# Minimal SearxNG configuration tailored for the MCP search module. The goal is
# to provide deterministic defaults that work in development and CI while
# keeping the list of enabled engines compliant with permissive licences.
use_default_settings: false

server:
  # Deterministic default secret for local work. Replace in production via env.
  secret_key: "please-change-me-please-change-me-please-change-me"
  port: 8080
  bind_address: "0.0.0.0"
  public_instance: false
  limiter: false
  # Keep the legacy GET search endpoint enabled so tooling and health probes can
  # query without negotiating CSRF tokens. Production deployments can override
  # this value to POST if they want stricter caching controls.
  method: "GET"

search:
  # Safe-search defaults to 0 (off) so integration tests can cover unrestricted
  # SERP results. Switch to 1 in production environments needing filtering.
  safe_search: 0
  autocomplete: ""
  formats:
    - html
    - json

# Engines listed below mirror the SEARCH_SEARX_ENGINES and
# SEARCH_SEARX_CATEGORIES runtime defaults documented in env/.env.example. Keep
# this catalogue minimal so contributors can run the stack without additional
# API keys while retaining decent coverage in tests.
engines:
  # DuckDuckGo covers most general queries with permissive rate limits.
  - name: duckduckgo
    engine: duckduckgo
    shortcut: ddg
    categories:
      - general
      - news
      - images
  # Wikipedia offers structured encyclopedic results for factual lookups.
  - name: wikipedia
    engine: wikipedia
    shortcut: wiki
    categories:
      - general
      - news
  # ArXiv exposes recent research papers, critical for the PDF scenario.
  - name: arxiv
    engine: arxiv
    shortcut: arxiv
    categories:
      - files
      - science
  # GitHub search powers code-oriented workflows while remaining API free.
  - name: github
    engine: github
    shortcut: gh
    categories:
      - it
      - general
  # Mojeek is an independent crawler that improves redundancy when DDG throttles.
  - name: mojeek
    engine: mojeek
    shortcut: mojeek
    categories:
      - general
      - news

ui:
  theme_args:
    header_logo: ""
  infinite_scroll: false
  # Expose the most common categories as UI tabs. The SearxNG schema expects
  # `categories_as_tabs` to live under `ui` and be a mapping. We provide empty
  # objects so validation passes while the engine categories above continue to
  # control filtering.
  categories_as_tabs:
    general: {}
    news: {}
    files: {}
    images: {}

result_proxy:
  # Keep the proxy disabled by default so local testing remains simple. Define
  # `url` to enable it when routing traffic through a hardened instance.
  url: ""
  rewrite_result_links: false
