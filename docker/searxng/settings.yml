# Minimal SearxNG configuration tailored for the MCP search module. The goal is
# to provide deterministic defaults that work in development and CI while
# keeping the list of enabled engines compliant with permissive licences.
use_default_settings: false

server:
  # Deterministic default secret for local work. Replace in production via env.
  secret_key: "please-change-me-please-change-me-please-change-me"
  port: 8080
  bind_address: "0.0.0.0"
  public_instance: false
  limiter: false
  # Keep the legacy GET search endpoint enabled so tooling and health probes can
  # query without negotiating CSRF tokens. Production deployments can override
  # this value to POST if they want stricter caching controls.
  method: "GET"

search:
  # Safe-search defaults to 0 (off) so integration tests can cover unrestricted
  # SERP results. Switch to 1 in production environments needing filtering.
  safe_search: 0
  autocomplete: ""
  formats:
    - html
    - json

# Engines listed below mirror the SEARCH_SEARX_ENGINES and
# SEARCH_SEARX_CATEGORIES runtime defaults documented in env/.env.example. Keep
# this catalogue minimal so contributors can run the stack without additional
# API keys while retaining decent coverage in tests.
engines:
  # DuckDuckGo covers most general queries with permissive rate limits.
  - name: duckduckgo
    engine: duckduckgo
    shortcut: ddg
    categories:
      - general
      - news
      - images
  # Wikipedia offers structured encyclopedic results for factual lookups.
  - name: wikipedia
    engine: wikipedia
    shortcut: wiki
    categories:
      - general
      - news
  # ArXiv exposes recent research papers, critical for the PDF scenario.
  - name: arxiv
    engine: arxiv
    shortcut: arxiv
    categories:
      - files
      - science
  # GitHub search powers code-oriented workflows while remaining API free.
  - name: github
    engine: github
    shortcut: gh
    categories:
      - it
      - general
  # Mojeek is an independent crawler that improves redundancy when DDG throttles.
  - name: mojeek
    engine: mojeek
    shortcut: mojeek
    categories:
      - general
      - news

# When `use_default_settings: false` is set the SearxNG schema requires a
# top-level `categories_as_tabs` mapping. Defining it here keeps the instance
# bootable without inheriting the upstream defaults while still allowing us to
# label tabs explicitly in the UI. Declare every category recognised by the
# upstream defaults so the validator never falls back to `null` placeholders.
categories_as_tabs:
  general:
    name: "General"
    categories:
      - general
  images:
    name: "Images"
    categories:
      - images
  videos:
    name: "Videos"
    categories:
      - videos
  news:
    name: "News"
    categories:
      - news
  map:
    name: "Maps"
    categories:
      - map
  music:
    name: "Music"
    categories:
      - music
  it:
    name: "IT"
    categories:
      - it
  science:
    name: "Science"
    categories:
      - science
  files:
    name: "Documents"
    categories:
      - files
  social media:
    name: "Social"
    categories:
      - "social media"

ui:
  theme_args:
    header_logo: ""
  infinite_scroll: false

result_proxy:
  # Keep the proxy disabled by default so local testing remains simple. Define
  # `url` to enable it when routing traffic through a hardened instance.
  url: ""
  rewrite_result_links: false
