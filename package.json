{
  "name": "mcp-self-fork-orchestrator",
  "version": "1.3.0",
  "description": "MCP server (STDIO) : orchestre des sous-chats parallèles avec streaming et consultation live par enfant, sans clé API.",
  "private": true,
  "type": "module",
  "bin": {
    "mcp-self-fork-orchestrator": "dist/server.js"
  },
  "scripts": {
    "build": "tsc && tsc -p graph-forge/tsconfig.json",
    "build:portable": "node -e \"process.exit(require('fs').existsSync('node_modules/.bin/tsc')?0:1)\" || (npx --yes typescript tsc && npx --yes typescript tsc -p graph-forge/tsconfig.json)",
    "start": "node dist/server.js",
    "start:http": "node dist/server.js --http --http-host 127.0.0.1 --http-port 8765 --http-path /mcp --http-json on --http-stateless yes",
    "start:stdio": "node dist/server.js",
    "start:fsbridge": "node dist/bridge/fsBridge.js",
    "start:dashboard": "node scripts/start-dashboard.mjs",
    "dev": "node --loader ts-node/esm src/server.ts",
    "clean": "node scripts/clean.mjs",
    "test": "npm run build --silent && npm run test:unit",
    "test:unit": "node --import tsx ./node_modules/mocha/bin/mocha.js --reporter tap --file tests/setup.ts \"tests/**/*.test.ts\"",
    "test:int": "node scripts/run-int-tests.mjs",
    "test:e2e": "node --import tsx ./node_modules/mocha/bin/mocha.js --reporter tap --file tests/setup.ts \"tests/e2e/**/*.test.ts\"",
    "test:e2e:http": "node scripts/run-http-e2e.mjs",
    "validate:run": "node scripts/validate-run.mjs",
    "validation:capture-log": "node --import tsx scripts/captureHttpLog.ts",
    "validation:introspect": "node --import tsx scripts/runIntrospectionPhase.ts",
    "validation:stimulate-log": "node --import tsx scripts/stimulateHttpLogging.ts",
    "validation:graph-forge": "node --import tsx scripts/runGraphForgePhase.ts",
    "validation:transactions": "node --import tsx scripts/runTransactionsPhase.ts",
    "validation:children": "node --import tsx scripts/runChildrenPhase.ts",
    "validation:plans": "node --import tsx scripts/runPlanPhase.ts",
    "validation:coordination": "node --import tsx scripts/runCoordinationPhase.ts",
    "validation:knowledge": "node --import tsx scripts/runKnowledgePhase.ts",
    "validation:robustness": "node --import tsx scripts/runRobustnessPhase.ts",
    "validation:performance": "node --import tsx scripts/runPerformancePhase.ts",
    "validation:security": "node --import tsx scripts/runSecurityPhase.ts",
    "coverage": "npm run build --silent && c8 --reporter=text-summary --reporter=lcov --reporter=html --check-coverage --statements 85 --functions 85 --lines 85 --branches 70 --exclude \"dist/**\" node --import tsx ./node_modules/mocha/bin/mocha.js --reporter tap --file tests/setup.ts \"tests/**/*.test.ts\"",
    "bench:scheduler": "node --import tsx tests/perf/scheduler.bench.ts",
    "lint": "npm run lint:types && npm run lint:node-builtins",
    "lint:types": "tsc --noEmit --pretty false && tsc --noEmit --project graph-forge/tsconfig.json",
    "lint:node-builtins": "node --import tsx scripts/checkNodeBuiltins.ts"
  },
  "dependencies": {
    "@modelcontextprotocol/sdk": "^1.18.1",
    "@types/node": "^20.14.12",
    "yaml": "^2.8.1",
    "zod": "^3.23.8"
  },
  "devDependencies": {
    "@types/chai": "^4.3.12",
    "@types/mocha": "^10.0.6",
    "c8": "^9.1.0",
    "chai": "^5.1.1",
    "fast-check": "^4.3.0",
    "mocha": "^10.7.0",
    "sinon": "^17.0.1",
    "ts-node": "^10.9.2",
    "tsx": "^4.19.2",
    "typescript": "^5.6.3"
  },
  "engines": {
    "node": ">=20.0.0",
    "npm": ">=9"
  },
  "license": "MIT"
}
